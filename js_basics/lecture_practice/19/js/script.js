"use strict";

function first() {
    //Do something

    setTimeout(function() {//написали для создания задержки
        console.log(1);
    }, 500);
}

function second() {
    console.log(2);
}

first();
second();

//Пример callback-функции
function learnJS(lang, callback) {//Главный шаблон callback-функции то, что 
//в другую функцию в качестве аргумента в будущем мы сможем передать 
//другую функцию 
    console.log(`Я учу: ${lang}`);
    callback();//Теперь получается, что когда только выполнится действие 
//от первой функции, выполнится после этого уже строго вторая функция callback
}

function done() {
    console.log('Я прошел этот урок!');
}

learnJS('JavaScript', done);//
//learnJS выполни функцию done только тогда, когда до нее дойдешь (23)
//Т.е.done, как функция(31), передается вместо callback(19) и только внутри
//в нужный момент уже вызывается(23). Поэтому мы не ставим (), потому что
//не вызываем функцию, а передаем, чтобы она в дальнейшем была использована.